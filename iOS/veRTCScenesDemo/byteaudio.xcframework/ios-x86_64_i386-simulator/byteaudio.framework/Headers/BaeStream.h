#ifndef BYTE_AUDIO_STREAM_H
#define BYTE_AUDIO_STREAM_H

#import "byteaudio/BaeEngineTypes.h"

#pragma mark - ByteAudioInputSinkDelegate
@class ByteAudioInputStream;
/**
 *  ByteAudioInputSinkDelegate registerfor  ByteAudioInputStreamï¼Œusing for outside SDK to receive ByteAudioSDK data
 *
 */
@protocol ByteAudioInputSinkDelegate <NSObject>

/**
 * Notify external SDK to receive network transmission data generated by ByteAudioSDK
 *
 * @param stream ByteAudioInputStream input stream
 * @param audioStreamBuffer Network send data generated by this input stream
 *
 * @return @see ByteAudioErrorCode
 */
- (int)onPushAudioBufferFromStream:(ByteAudioInputStream* _Nonnull)stream
                            Buffer:(ByteAudioStreamBuffer* _Nonnull)audioStreamBuffer;

@end

#pragma mark - ByteAudioInputStream
/**
 *  ByteAudioInputStream Responsible for the flow of ByteAudio from audio equipment collection to encoding control
 */
BYTEAUDIO_API
@interface ByteAudioInputStream : NSObject
@property(nonatomic, weak) id<ByteAudioInputSinkDelegate> _Nullable delegate;
//@property(nonatomic, assign) BOOL mute;
//@property(nonatomic, assign) NSInteger gain;
//@property(nonatomic, assign) NSUInteger stream_id;

/**
 * initial stream object
 *
 * @param name 
 *
 * @return Object-c object being initialized
 */
- (ByteAudioInputStream* _Nullable)initWithName:(NSString* _Nonnull)name;

/**
 * Release the cpp object contained in the stream object
 */
- (void)releaseStream;

/**
 * Report the current output stream object statistical data
 *
 * @return @see @ByteAudioOutPutStreamReport
 */
- (NSDictionary* _Nullable)getReportStats;

/**
 * start ByteAudio input stream
 *
 * @return @see ByteAudioErrorCode
 */
- (int)startStream;

/**
 * stop ByteAudio input stream
 *
 * @return @see ByteAudioErrorCode
 */
- (int)stopStream;

/**
 * set gain
 *
 * @param gain 
 *
 */
- (void)setGain:(NSInteger)gain;

/**
 * mute input stream
 *
 * @return error code, refer to @ByteAudioErrorCode
 */
- (int)setMute:(BOOL)mute;

/**
 * set stream format
 *
 * @param stream_format format
 *
 * @return @see ByteAudioErrorCode
 */
- (int)setStreamFormat:(ByteAudioStreamFormat* _Nonnull)streamFormat;

/**
 * set stream parameter
 *
 * @param dict option-value
 *
 * @return @see ByteAudioErrorCode
 */
- (int)setValue:(ByteAudioOption)optin Value:(NSNumber* _Nonnull)value;

/**
 * get the value of key
 *
 * @param key key
 *
 * @return the value of the key
 */
- (NSNumber* _Nullable)getValue:(ByteAudioOption)option;

/**
 * Register ByteAudioInputSinkDelegate callback
 *
 * @param delegate ByteAudioInputSinkDelegate Used to receive the sent data of ByteAudioSDK
 */
- (void)setSinkDelegate:(id<ByteAudioInputSinkDelegate> _Nonnull)delegate;

/**
 * get stream name
 *
 * @return name of stream
 */
- (NSString* _Nullable)getName;

/**
 * get stream id
 *
 * @return stream id
 */
- (uint32_t)getId;

@end

#pragma mark - ByteAudioOutputSinkDelegate
@class ByteAudioOutputStream;
/**
 *  ByteAudioOutputSinkDelegate Register into ByteAudioOutputStream for ByteAudio
  * The SDK pulls the network received data generated by the external SDK
 */
@protocol ByteAudioOutputSinkDelegate <NSObject>

/**
 * ByteAudio SDK Pull network reception data generated by external SDK
 *
 * @param stream ByteAudioOutputStream input stream
 * @param audioStreamBuffer Network received data generated by this output stream
 *
 * @return @see ByteAudioErrorCode
 */
- (int)onPullAudioBufferFromStream:(ByteAudioOutputStream* _Nonnull)stream
                            Buffer:(ByteAudioStreamBuffer* _Nonnull)audioStreamBuffer;

@end

#pragma mark - ByteAudioOutputStream
/**
 *  ByteAudioOutputStream Responsible for the stream of ByteAudio from audio decoding to playback control
 */
BYTEAUDIO_API
@interface ByteAudioOutputStream : NSObject
@property(nonatomic, weak) id<ByteAudioOutputSinkDelegate> _Nullable delegate;
//@property(nonatomic, assign) BOOL mute;
//@property(nonatomic, assign) NSInteger gain;
//@property(nonatomic, assign) NSUInteger stream_id;

/**
 * initial stream object
 *
 * @param name the name of the stream
 *
 * @return Object-c object being initialized
 */
- (ByteAudioOutputStream* _Nullable)initWithName:(NSString* _Nonnull)name;

/**
 * Release the cpp object contained in the stream object
 */
- (void)releaseStream;

/**
 * Report the current output stream object statistical data
 *
 * @return @see @ByteAudioOutPutStreamReport
 */
- (NSDictionary* _Nullable)getReportStats;

/**
 * Start ByteAudio output stream
 *
 * @return @see ByteAudioErrorCode
 */
- (int)startStream;

/**
 * Stop ByteAudio output stream
 *
 * @return @see ByteAudioErrorCode
 */
- (int)stopStream;

/**
 * set stream gain
 *
 * @param gain gain
 *
 */
- (void)setGain:(NSInteger)gain;

/**
 * mute the output stream
 *
 * @return error code, refer to @ByteAudioErrorCode
 */
- (int)setMute:(BOOL)mute;

/**
 * set stream format
 *
 * @param stream_format stream format
 *
 * @return @see ByteAudioErrorCode
 */
- (int)setStreamFormat:(ByteAudioStreamFormat* _Nonnull)streamFormat;

/**
 * set stream configure
 *
 * @param dict  the parameter option and value pair
 *
 * @return @see ByteAudioErrorCode
 */
- (int)setValue:(ByteAudioOption)optin Value:(NSNumber* _Nonnull)value;

/**
 * Get the stream parameters corresponding to the current key
 *
 * @param key the key
 *
 * @return the value of the key
 */
- (NSNumber* _Nullable)getValue:(ByteAudioOption)option;

/**
 * Register ByteAudioOutputSinkDelegate callback
 *
 * @param delegate ByteAudioOutputSinkDelegate Used for ByteAudio SDK to pull network received data generated by external SDK
 */
- (void)setSinkDelegate:(id<ByteAudioOutputSinkDelegate> _Nonnull)delegate;

/**
 * get stream name
 *
 * @return stream name
 */
- (NSString* _Nullable)getName;

/**
 * get stream id
 *
 * @return stream id
 */
- (uint32_t)getId;

@end

#pragma mark - ByteAudioAuxSinkDelegate
@class ByteAudioAuxStream;
/**
 *  ByteAudioAuxSinkDelegate Register into ByteAudioAuxStream, 
 * which is used by ByteAudio SDK to pull the network received data generated by external SDK
 */
@protocol ByteAudioAuxSinkDelegate <NSObject>

/**
 * ByteAudio SDK pulls network reception data generated by external SDK
 *
 * @param stream ByteAudioOutputStream input stream
 * @param audioStreamBuffer Network received data generated by this output stream
 *
 * @return @see ByteAudioErrorCode
 */
- (int)onPullAudioBuffer:(ByteAudioAuxStream* _Nonnull)stream
                  Buffer:(ByteAudioStreamBuffer* _Nonnull)audioStreamBuffer;

- (void)onAuxMixingBegin:(ByteAudioAuxStream* _Nonnull)stream;
- (void)onAuxMixingEnd:(ByteAudioAuxStream* _Nonnull)stream;

@end

#pragma mark - ByteAudioAuxStream
/**
 *  ByteAudioAuxStream Responsible for ByteAudio from auxiliary audio source to mixer
 */
BYTEAUDIO_API
@interface ByteAudioAuxStream : NSObject
@property(nonatomic, weak) id<ByteAudioAuxSinkDelegate> _Nullable delegate;
//@property(nonatomic, assign) BOOL mute;
//@property(nonatomic, assign) NSInteger gain;
//@property(nonatomic, assign) NSUInteger stream_id;

/**
 * Initialize the stream object
 *
 * @param name the stream name
 *
 * @return Object-c object being initialized
 */
- (ByteAudioAuxStream* _Nullable)initWithName:(NSString* _Nonnull)name;

/**
 * Release the cpp object contained in the stream object
 */
- (void)releaseStream;

/**
 * Report the current output stream object statistical data
 *
 * @return @see @ByteAudioOutPutStreamReport
 */
- (NSDictionary* _Nullable)getReportStats;

/**
 * Start ByteAudio auxiliary stream
 *
 * @return @see ByteAudioErrorCode
 */
- (int)startStream;

/**
 * Stop ByteAudio auxiliary stream
 *
 * @return @see ByteAudioErrorCode
 */
- (int)stopStream;

/**
 * set gain
 *
 * @param gain gain
 *
 */
- (void)setGain:(NSInteger)gain;

/**
 * set stream format
 *
 * @param stream_format stream format
 *
 * @return @see ByteAudioErrorCode
 */
- (int)setStreamFormat:(ByteAudioStreamFormat* _Nonnull)streamFormat;

/**
 * set stream configuration
 *
 * @param dict the option-value pair
 *
 * @return @see ByteAudioErrorCode
 */
- (int)setValue:(ByteAudioOption)optin Value:(NSNumber* _Nonnull)value;

/**
 * get the value of the key
 *
 * @param key key
 *
 * @return value
 */
- (NSNumber* _Nullable)getValue:(ByteAudioOption)key;

/**
 * pause stream play
 *
 * @return @see ByteAudioErrorCode
 */
- (int)pauseStream;

/**
 * reset play
 *
 * @return @see ByteAudioErrorCode
 */
- (int)resumeStream;

/**
 * Register ByteAudioAuxSinkDelegate callback
 *
 * @param delegate ByteAudioAuxSinkDelegate Used by ByteAudio SDK to pull PCM audio that external SDK needs to play by ByteAudio
 */
- (void)setSinkDelegate:(id<ByteAudioAuxSinkDelegate> _Nonnull)delegate;

/**
 * Set ByteAudio aux streaming file path
 *
 * @param filePath ByteAudio playback file path specified by the external SDK
 */
- (void)setAudioSourceFile:(NSString* _Nonnull)filePath;

/**
 * get stream name
 *
 * @return stream object name
 */
- (NSString* _Nullable)getName;

/**
 * get stream id
 *
 * @return stream id
 */
- (uint32_t)getId;

/**
 * Add input stream name to aux stream for mix
 *
 * @param streamName Input stream name
 */
- (void)addInputStreamNameForMix:(NSString* _Nonnull)streamName;

/**
 * Clear input stream name to aux stream for mix
 *
 * @param streamName Input stream name
 */
- (void)clearInputStreamNameForMix;

@end

#endif  // BYTE_AUDIO_STREAM_H
