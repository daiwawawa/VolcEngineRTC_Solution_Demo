#import "VoiceRTCManager.h"
#import <ByteRtcEngineKit/ByteRtcEngineKit.h>
#import "VoiceRoomParamInfoModel.h"

NS_ASSUME_NONNULL_BEGIN
@class VoiceRTCManager;
@protocol VoiceRTCManagerDelegate <NSObject>

- (void)voiceRTCManager:(VoiceRTCManager *)voiceRTCManager changeParamInfo:(VoiceRoomParamInfoModel *)model;

- (void)voiceRTCManager:(VoiceRTCManager *_Nonnull)voiceRTCManager reportAllAudioVolume:(NSDictionary<NSString *, NSNumber *> *_Nonnull)volumeInfo;

@end

@interface VoiceRTCManager : NSObject

@property (nonatomic, weak) id<VoiceRTCManagerDelegate> delegate;

/*
 * RTC Manager Singletons
 */
+ (VoiceRTCManager *_Nullable)shareRtc;

#pragma mark - Base Method

/**
 * Create RTCEngine instance
 * @param appID The unique identifier of each application is randomly generated by the VRTC console. Instances generated by different AppIds are completely independent for audio and video calls in VRTC and cannot communicate with each other.
 */
- (void)createEngine:(NSString *)appID;

/**
 * Join room
 * @param token token
 * @param roomID roomID
 * @param uid uid
 */
- (void)joinChannelWithToken:(NSString *)token roomID:(NSString *)roomID uid:(NSString *)uid;

/*
 * Switch local audio capture
 * @param enable ture:Turn on audio capture false：Turn off audio capture
 */
- (void)enableLocalAudio:(BOOL)enable;

/*
 * Switch local audio capture
 * @param mute ture:Turn on audio capture false：Turn off audio capture
 */
- (void)muteLocalAudio:(BOOL)mute;

/*
 * Leave the room
 */
- (void)leaveChannel;

/*
 * destroy
 */
- (void)destroy;

/*
 * gGet Sdk Version
 */
- (NSString *_Nullable)getSdkVersion;

@end

NS_ASSUME_NONNULL_END
