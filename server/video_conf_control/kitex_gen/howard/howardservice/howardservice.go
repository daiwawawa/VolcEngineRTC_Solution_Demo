// Code generated by Kitex v0.0.3. DO NOT EDIT.

package howardservice

import (
	"context"
	"github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
	"github.com/volcengine/VolcEngineRTC/server/video_conf_control/kitex_gen/howard"
)

func serviceInfo() *kitex.ServiceInfo {
	return howardServiceServiceInfo
}

var howardServiceServiceInfo = newServiceInfo()

func newServiceInfo() *kitex.ServiceInfo {
	serviceName := "HowardService"
	handlerType := (*howard.HowardService)(nil)
	methods := map[string]kitex.MethodInfo{
		"CleanVideo": kitex.NewMethodInfo(cleanVideoHandler, newHowardServiceCleanVideoArgs, newHowardServiceCleanVideoResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "howard",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.0.3",
		Extra:           extra,
	}
	return svcInfo
}

func cleanVideoHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*howard.HowardServiceCleanVideoArgs)
	realResult := result.(*howard.HowardServiceCleanVideoResult)
	success, err := handler.(howard.HowardService).CleanVideo(ctx, realArg.Request)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newHowardServiceCleanVideoArgs() interface{} {
	return howard.NewHowardServiceCleanVideoArgs()
}

func newHowardServiceCleanVideoResult() interface{} {
	return howard.NewHowardServiceCleanVideoResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) CleanVideo(ctx context.Context, request *howard.CleanVideoRequest) (r *howard.CleanVideoResponse, err error) {
	var _args howard.HowardServiceCleanVideoArgs
	_args.Request = request
	var _result howard.HowardServiceCleanVideoResult
	if err = p.c.Call(ctx, "CleanVideo", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
